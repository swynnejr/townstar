import { type NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";
import Navbar from "../components/NavBar";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Town Star</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex max-w-[80%] flex-col items-center justify-center gap-12 px-4 py-16">
          <div className="flex">
            <div>
              <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
                Town <span className="text-[hsl(280,100%,70%)]">Star</span>
              </h1>
              <h4 className="text-white">
                is a city-building simulation game developed by Gala Games.
              </h4>
              <div className="mt-5">
                <Link
                  className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 object-contain p-4 text-white hover:bg-white/20"
                  href="https://games.gala.com/games/town-star"
                  target="_blank"
                >
                  <h3 className="text-2xl font-bold">Want to Play? →</h3>
                  <div className="text-lg">
                    Visit the Gala Games website to play!
                  </div>
                </Link>
                {/* <Link
                  className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
                  href="https://create.t3.gg/en/introduction"
                  target="_blank"
                >
                  <h3 className="text-2xl font-bold">Documentation →</h3>
                  <div className="text-lg">
                    Learn more about Create T3 App, the libraries it uses, and
                    how to deploy it.
                  </div>
                </Link> */}
              </div>
            </div>
            <Image
              src="/farmwithwindmill.png"
              width={750}
              height={750}
              alt="Farm on a floating island"
            />
          </div>
          <p className="text-white">
            The objective of the game is to build and manage your own virtual
            city, starting from a small town and expanding it into a bustling
            metropolis. Players have access to various tools and resources to
            construct buildings, produce goods, trade with other players, and
            more. There are also various challenges and obstacles to overcome as
            you grow your city, such as natural disasters, resource shortages,
            and other player interactions. In addition to the city-building
            aspect, Town Star also has elements of strategy and competition, as
            players compete with each other to be the best and most successful
            city-builder. This adds a social and multiplayer aspect to the game,
            allowing players to interact with each other and form alliances or
            engage in conflicts. Overall, Town Star offers a fun and engaging
            experience for players who enjoy city-building simulation games, as
            well as those who enjoy multiplayer competition and strategy.
          </p>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
